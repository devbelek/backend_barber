# Generated by Django 5.2 on 2025-06-04 07:19

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('barbershops', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BarbershopApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant_name', models.CharField(max_length=200, verbose_name='ФИО заявителя')),
                ('applicant_email', models.EmailField(max_length=254, verbose_name='Email заявителя')),
                ('applicant_phone', models.CharField(max_length=20, verbose_name='Телефон заявителя')),
                ('barbershop_name', models.CharField(max_length=200, verbose_name='Название барбершопа')),
                ('barbershop_address', models.TextField(verbose_name='Адрес барбершопа')),
                ('barbershop_description', models.TextField(verbose_name='Описание барбершопа')),
                ('barbershop_phone', models.CharField(max_length=20, verbose_name='Телефон барбершопа')),
                ('barbershop_whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='WhatsApp')),
                ('barbershop_instagram', models.CharField(blank=True, max_length=50, null=True, verbose_name='Instagram')),
                ('barbers_count', models.IntegerField(default=1, verbose_name='Количество барберов')),
                ('working_experience', models.TextField(help_text='Расскажите о вашем опыте в барбер-индустрии', verbose_name='Опыт работы')),
                ('additional_info', models.TextField(blank=True, null=True, verbose_name='Дополнительная информация')),
                ('status', models.CharField(choices=[('pending', 'Ожидает рассмотрения'), ('approved', 'Одобрена'), ('rejected', 'Отклонена')], default='pending', max_length=20, verbose_name='Статус')),
                ('admin_notes', models.TextField(blank=True, null=True, verbose_name='Примечания администратора')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата подачи')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата рассмотрения')),
                ('created_barbershop', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='application', to='barbershops.barbershop', verbose_name='Созданный барбершоп')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_applications', to=settings.AUTH_USER_MODEL, verbose_name='Рассмотрел')),
            ],
            options={
                'verbose_name': 'Заявка на барбершоп',
                'verbose_name_plural': 'Заявки на барбершопы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BarbershopReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 звезда'), (2, '2 звезды'), (3, '3 звезды'), (4, '4 звезды'), (5, '5 звезд')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barbershop_reviews', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('barbershop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barbershop_reviews', to='barbershops.barbershop', verbose_name='Барбершоп')),
            ],
            options={
                'verbose_name': 'Отзыв о барбершопе',
                'verbose_name_plural': 'Отзывы о барбершопах',
                'ordering': ['-created_at'],
                'unique_together': {('author', 'barbershop')},
            },
        ),
    ]
