# Generated by Django 5.2 on 2025-05-28 18:28

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Barbershop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='barbershops/logos/', verbose_name='Логотип')),
                ('description', models.TextField(verbose_name='Описание')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Широта')),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Долгота')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='WhatsApp')),
                ('telegram', models.CharField(blank=True, max_length=50, null=True, verbose_name='Telegram')),
                ('instagram', models.CharField(blank=True, max_length=50, null=True, verbose_name='Instagram')),
                ('working_hours_from', models.TimeField(default='09:00', verbose_name='Начало работы')),
                ('working_hours_to', models.TimeField(default='21:00', verbose_name='Конец работы')),
                ('working_days', models.JSONField(blank=True, default=list, verbose_name='Рабочие дни')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Проверен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_barbershops', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Барбершоп',
                'verbose_name_plural': 'Барбершопы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BarbershopPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='barbershops/photos/', verbose_name='Фото')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('barbershop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='barbershops.barbershop', verbose_name='Барбершоп')),
            ],
            options={
                'verbose_name': 'Фото барбершопа',
                'verbose_name_plural': 'Фото барбершопов',
                'ordering': ['order', '-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='BarbershopStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Владелец'), ('manager', 'Менеджер'), ('barber', 'Барбер')], default='barber', max_length=20, verbose_name='Роль')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата присоединения')),
                ('barbershop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='barbershops.barbershop', verbose_name='Барбершоп')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barbershop_staff', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Сотрудник барбершопа',
                'verbose_name_plural': 'Сотрудники барбершопов',
                'unique_together': {('barbershop', 'user')},
            },
        ),
    ]
