#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
BarberHub Telegram Bot
–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ /start, /help, /status –¥–ª—è –±–∞—Ä–±–µ—Ä–æ–≤
"""

import os
import sys
import django
import requests
import time
import json
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'barberhub.settings')
django.setup()

from notifications.models import TelegramUser

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
if not TOKEN:
    try:
        from django.conf import settings

        TOKEN = settings.TELEGRAM_BOT_TOKEN
    except:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        sys.exit(1)


def send_message(chat_id, text, parse_mode='Markdown'):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        url = f"https://api.telegram.org/bot{TOKEN}/sendMessage"
        data = {
            'chat_id': chat_id,
            'text': text,
            'parse_mode': parse_mode,
            'disable_web_page_preview': True
        }
        response = requests.post(url, data=data, timeout=10)
        return response.json()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return {'ok': False, 'description': str(e)}


def get_updates(offset=None, timeout=10):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
    try:
        url = f"https://api.telegram.org/bot{TOKEN}/getUpdates"
        params = {'timeout': timeout}
        if offset:
            params['offset'] = offset

        response = requests.get(url, params=params, timeout=timeout + 5)
        return response.json()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
        return {'ok': False, 'result': []}


def handle_start(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    chat_id = message['chat']['id']
    user = message.get('from', {})
    username = user.get('username', '').lower()
    first_name = user.get('first_name', '')

    print(f"üì• /start –æ—Ç @{username} (ID: {chat_id}, –ò–º—è: {first_name})")

    if not username:
        no_username_msg = (
            "‚ö†Ô∏è *–ù–µ—Ç username –≤ Telegram*\n\n"
            "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å BarberHub Bot –Ω—É–∂–µ–Ω username.\n\n"
            "üì± *–ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å username:*\n"
            "1. –û—Ç–∫—Ä–æ–π—Ç–µ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram\n"
            "2. –ù–∞–π–¥–∏—Ç–µ –ø–æ–ª–µ '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'\n"
            "3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è\n"
            "4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start —Å–Ω–æ–≤–∞"
        )
        send_message(chat_id, no_username_msg)
        return

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_msg = (
        f"ü§ñ *BarberHub Bot*\n\n"
        f"–ü—Ä–∏–≤–µ—Ç, {first_name}! üëã\n\n"
        f"üÜî Chat ID: `{chat_id}`\n"
        f"üë§ Username: @{username}\n\n"
        f"‚ö° –ü–æ–¥–∫–ª—é—á–∞—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è..."
    )
    send_message(chat_id, welcome_msg)

    # –ò—â–µ–º –±–∞—Ä–±–µ—Ä–∞ –≤ –±–∞–∑–µ
    try:
        tg_user = TelegramUser.objects.get(username__iexact=username)

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        old_chat_id = tg_user.chat_id
        tg_user.chat_id = str(chat_id)
        tg_user.is_active = True
        tg_user.save()

        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω @{username}: chat_id {old_chat_id} -> {chat_id}")

        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        success_msg = (
            f"üéâ *–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω—ã!*\n\n"
            f"üë®‚Äçüíº –ë–∞—Ä–±–µ—Ä: {tg_user.barber.get_full_name()}\n"
            f"üì± Username: @{username}\n"
            f"üÜî Chat ID: `{chat_id}`\n\n"
            f"üì¨ *–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å:*\n"
            f"‚Ä¢ üîî –ù–æ–≤—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n"
            f"‚Ä¢ ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã\n"
            f"‚Ä¢ ‚ùå –û—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–µ–π\n"
            f"‚Ä¢ üìä –í–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n\n"
            f"üöÄ *–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!*\n\n"
            f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
        )
        send_message(chat_id, success_msg)

    except TelegramUser.DoesNotExist:
        print(f"‚ùå @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –±–∞—Ä–±–µ—Ä–æ–≤")

        not_found_msg = (
            f"‚ùå *–ë–∞—Ä–±–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω*\n\n"
            f"@{username}, –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –±–∞—Ä–±–µ—Ä –≤ BarberHub.\n\n"
            f"üìù *–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:*\n\n"
            f"1Ô∏è‚É£ –ó–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç BarberHub\n"
            f"2Ô∏è‚É£ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∫–∞–∫ –±–∞—Ä–±–µ—Ä\n"
            f"3Ô∏è‚É£ –í –ø—Ä–æ—Ñ–∏–ª–µ —É–∫–∞–∂–∏—Ç–µ Telegram: `{username}`\n"
            f"4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start —ç—Ç–æ–º—É –±–æ—Ç—É\n\n"
            f"üÜò *–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?*\n"
            f"–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–∞–π—Ç–∞."
        )
        send_message(chat_id, not_found_msg)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ @{username}: {e}")
        send_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")


def handle_help(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
    chat_id = message['chat']['id']

    help_msg = (
        "ü§ñ *BarberHub Bot - –°–ø—Ä–∞–≤–∫–∞*\n\n"
        "üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
        "/start - –ü–æ–¥–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n\n"
        "üí° *–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è:*\n"
        "1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ –∫–∞–∫ –±–∞—Ä–±–µ—Ä\n"
        "2. –í –ø—Ä–æ—Ñ–∏–ª–µ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à Telegram username\n"
        "3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start —ç—Ç–æ–º—É –±–æ—Ç—É\n\n"
        "üîî *–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:*\n"
        "‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å—è—Ö\n"
        "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–º–µ–Ω–∞—Ö –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö\n"
        "‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Å–µ–∞–Ω—Å–∞—Ö\n\n"
        "üåê *–°–∞–π—Ç:* your-barberhub-site.com\n"
        "üÜò *–ü–æ–¥–¥–µ—Ä–∂–∫–∞:* @admin_username"
    )
    send_message(chat_id, help_msg)


def handle_status(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /status"""
    chat_id = message['chat']['id']
    user = message.get('from', {})
    username = user.get('username', '').lower()

    if not username:
        send_message(chat_id, "‚ùå –ù–µ—Ç username –≤ Telegram")
        return

    try:
        tg_user = TelegramUser.objects.get(username__iexact=username)

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã
        connected_date = tg_user.connected_at.strftime('%d.%m.%Y %H:%M') if tg_user.connected_at else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
        last_notif = tg_user.last_notification.strftime('%d.%m.%Y %H:%M') if tg_user.last_notification else '–ù–µ –±—ã–ª–æ'

        status_msg = (
            f"üìä *–°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è*\n\n"
            f"üë®‚Äçüíº *–ë–∞—Ä–±–µ—Ä:* {tg_user.barber.get_full_name()}\n"
            f"üìß *Email:* {tg_user.barber.email}\n"
            f"üì± *Username:* @{tg_user.username}\n"
            f"üÜî *Chat ID:* `{tg_user.chat_id}`\n"
            f"üü¢ *–°—Ç–∞—Ç—É—Å:* {'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' if tg_user.is_active else 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}\n"
            f"üìÖ *–ü–æ–¥–∫–ª—é—á–µ–Ω:* {connected_date}\n"
            f"üîî *–ü–æ—Å–ª–µ–¥–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:* {last_notif}\n\n"
            f"‚úÖ *–í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!*\n\n"
            f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
        )
        send_message(chat_id, status_msg)

    except TelegramUser.DoesNotExist:
        error_msg = (
            f"‚ùå *–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω*\n\n"
            f"@{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –±–∞—Ä–±–µ—Ä–æ–≤.\n\n"
            f"üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é."
        )
        send_message(chat_id, error_msg)


def handle_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    chat_id = message['chat']['id']
    text = message.get('text', '').strip().lower()

    if text.startswith('/'):
        # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        unknown_msg = (
            "‚ùì *–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞*\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
        )
        send_message(chat_id, unknown_msg)
    else:
        # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        info_msg = (
            "ü§ñ *BarberHub Bot*\n\n"
            "–Ø –±–æ—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –±–∞—Ä–±–µ—Ä–æ–≤.\n\n"
            "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start - –ü–æ–¥–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
            "/help - –°–ø—Ä–∞–≤–∫–∞\n"
            "/status - –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
        )
        send_message(chat_id, info_msg)


def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –±–æ—Ç–∞"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ BarberHub Telegram Bot")
    print(f"üîó –°—Å—ã–ª–∫–∞: https://t.me/barber_tarak_bot")
    print(f"‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}")
    print("=" * 50)
    print("üìù –õ–æ–≥–∏:")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API
    try:
        response = requests.get(f"https://api.telegram.org/bot{TOKEN}/getMe", timeout=10)
        if response.status_code == 200:
            bot_info = response.json()['result']
            print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info['username']} ({bot_info['first_name']})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram API: {e}")
        return

    print("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞: Ctrl+C")
    print("-" * 50)

    offset = None
    error_count = 0
    max_errors = 10

    try:
        while True:
            try:
                updates = get_updates(offset, timeout=10)

                if not updates.get('ok'):
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ API: {updates.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                    error_count += 1
                    if error_count >= max_errors:
                        print(f"‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –æ—à–∏–±–æ–∫ ({max_errors}), –æ—Å—Ç–∞–Ω–æ–≤–∫–∞...")
                        break
                    time.sleep(5)
                    continue

                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ
                error_count = 0

                for update in updates.get('result', []):
                    try:
                        offset = update['update_id'] + 1

                        if 'message' not in update:
                            continue

                        message = update['message']
                        text = message.get('text', '').strip()

                        if text == '/start':
                            handle_start(message)
                        elif text == '/help':
                            handle_help(message)
                        elif text == '/status':
                            handle_status(message)
                        else:
                            handle_message(message)

                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                        continue

                time.sleep(1)

            except KeyboardInterrupt:
                raise
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
                error_count += 1
                if error_count >= max_errors:
                    break
                time.sleep(5)
                continue

    except KeyboardInterrupt:
        print("\nüëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        print(f"‚è∞ –í—Ä–µ–º—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}")
        print("üìä –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


if __name__ == '__main__':
    main()